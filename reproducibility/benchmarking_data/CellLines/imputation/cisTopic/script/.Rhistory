library(optparse)
library(cisTopic)
library(methods)
devtools::install_github("aertslab/cisTopic")
data(counts_mel)
cisTopicObject <- createcisTopicObject(counts_mel, project.name='scH3K27Ac_melanoma')
library(optparse)
library(cisTopic)
library(methods)
data(counts_mel)
cisTopicObject <- createcisTopicObject(counts_mel, project.name='scH3K27Ac_melanoma')
?createcisTopicObject
cisTopicObject <- runModels(cisTopicObject,
topic=c(2, 5:15, 20, 25),
seed=987, nCores=5, burnin = 120, iterations = 150,
addModels=FALSE)
cisTopicObject <- selectModel(cisTopicObject)
?selectModel
model <- cisTopicObject@selected.model
model$
)
cisTopicObject@selected.model$document_expects
cisTopicObject <- runUmap(cisTopicObject, target='cell')
par(mfrow=c(1,3))
plotFeatures(cisTopicObject, method='Umap', target='cell', topic_contr=NULL, colorBy=c('cellLine', 'LineType','pct_ReadsInPeaks'), cex.legend = 0.8, factor.max=.75, dim=2, legend=TRUE, col.low='darkgreen', col.mid='yellow', col.high='brown1', intervals=20)
install.packages("scatterplot3d")
par(mfrow=c(1,3))
plotFeatures(cisTopicObject, method='Umap', target='cell', topic_contr=NULL, colorBy=c('cellLine', 'LineType','pct_ReadsInPeaks'), cex.legend = 0.8, factor.max=.75, dim=2, legend=TRUE, col.low='darkgreen', col.mid='yellow', col.high='brown1', intervals=20)
cellTopicHeatmap(cisTopicObject, method='Probability', colorBy=c('LineType', 'cellLine'))
install.packages("fastcluster")
cellTopicHeatmap(cisTopicObject, method='Probability', colorBy=c('LineType', 'cellLine'))
model
typeof(model)
model[[1]]
model[[2]]
model[[3]]
t1 <- cisTopicObject@selected.model$document_expects
t1.dim()
dim(t1)
dim(counts_mel)
t2 <- cisTopicObject@selected.model$topics
dim(t2)
t1 <- as.matirx(cisTopicObject@selected.model$document_expects)
t1 <- as.matrix(cisTopicObject@selected.model$document_expects)
t2 <- as.matrix(cisTopicObject@selected.model$topics)
t1 <- as.data.frame(cisTopicObject@selected.model$document_expects)
t2 <- as.data.frame(cisTopicObject@selected.model$topics)
t2 <- as.data.frame(t(cisTopicObject@selected.model$topics))
head(t2)
head(t1)
x <- t2 %*% t1
x <- as.matrix(t2) %*% as.matrix(t1)
dim(x)
dim(counts_mel)
x[1]
x[2]
x[3]
x[4]
x
library(optparse)
library(cisTopic)
library(methods)
input_file <- "../../../TagCount/test.txt"
x <- read.table(input_file, header = TRUE)
cisTopicObject <- createcisTopicObject(x, project.name='CellLine')
?createcisTopicObject
cisTopicObject <- createcisTopicObject(as.matirx(x), project.name='CellLine')
cisTopicObject <- createcisTopicObject(count.matrix = as.matrix(x),
project.name = 'CellLine')
?createcisTopicObject
data(counts_mel)
counts_mel2 <- as.data.frame(counts_mel)
counts_mel2 <- as.data.frame(counts_mel@x)
counts_mel2 <- as.data.frame(counts_mel)
counts_mel2 <- as.data.frame(as.matrix(counts_mel))
head(counts_mel2)
head(x)
rownames(x)
library(stringr)
head(counts_mel2)
region <- as.data.frame(str_split(rownames(x)))
?str_split
region <- as.data.frame(str_split(rownames(x), "_"))
View(region)
region <- t(as.data.frame(str_split(rownames(x), "_")))
View(region)
colnames(region) <- c("chrom", "p1", "p2")
x$region <- paste0(region$chrom, ":", region$p1, "-", region$p2)
?paste0
colnames(region) <- c("chrom", "p1", "p2")
region$chrom
head(region)
region <- as.data.frame(t(as.data.frame(str_split(rownames(x), "_"))))
colnames(region) <- c("chrom", "p1", "p2")
head(region)
x$region <- paste0(region$chrom, ":", region$p1, "-", region$p2)
x$region
rownames(x) <- paste0(region$chrom, ":", region$p1, "-", region$p2)
x <- read.table(input_file, header = TRUE)
region <- as.data.frame(t(as.data.frame(str_split(rownames(x), "_"))))
colnames(region) <- c("chrom", "p1", "p2")
rownames(x) <- paste0(region$chrom, ":", region$p1, "-", region$p2)
cisTopicObject <- createcisTopicObject(count.matrix = as.matrix(x),
project.name = 'CellLine')
cisTopicObject <- createcisTopicObject(count.matrix = as.matrix(x),
project.name = 'CellLine')
cisTopicObject <- runModels(cisTopicObject,
topic=c(2, 5:15, 20, 25),
seed=987, nCores=6, burnin = 120,
iterations = 150, addModels=FALSE)
?runModels
library(ggplot2)
library(cowplot)
library(gridExtra)
library(dplyr)
library(mclust)
df_tagcount <- read.table("TagCount.txt", header = TRUE, check.names = FALSE)
df_anno <- read.table("../../Statistics/stat.txt", header = TRUE)
df_anno$NumofReads <- NULL
df_anno <- subset(df_anno, Runs %in% rownames(df_tagcount))
df_tagcount$Runs <- rownames(df_tagcount)
rownames(df_tagcount) <- NULL
df <- merge(df_tagcount, df_anno, by = "Runs")
ARI_tagcount <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_tagcount <- c(ARI_tagcount, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_tagcount <- as.data.frame(ARI_tagcount)
#######################
df_scImpute <- read.table("scImpute.txt", header = TRUE, check.names = FALSE)
df_scImpute$Runs <- rownames(df_scImpute)
rownames(df_scImpute) <- NULL
df <- merge(df_scImpute, df_anno, by = "Runs")
ARI_scImpute <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_scImpute <- c(ARI_scImpute, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_scImpute <- as.data.frame(ARI_scImpute)
df_cisTopic <- read.table("cisTopic.txt", header = TRUE, check.names = FALSE)
df_cisTopic$Runs <- rownames(df_cisTopic)
rownames(df_cisTopic) <- NULL
df <- merge(df_cisTopic, df_anno, by = "Runs")
df_cisTopic <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
df_cisTopic <- c(df_cisTopic, adjustedRandIndex(estimate_cluster, df$CellType))
}
df_cisTopic <- as.data.frame(df_cisTopic)
df_SAVER <- read.table("SAVER.txt", header = TRUE, check.names = FALSE)
df_SAVER$Runs <- rownames(df_SAVER)
rownames(df_SAVER) <- NULL
df <- merge(df_SAVER, df_anno, by = "Runs")
ARI_SAVER <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_SAVER <- c(ARI_SAVER, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_SAVER <- as.data.frame(ARI_SAVER)
df_MAGIC <- read.table("MAGIC.txt", header = TRUE, check.names = FALSE)
df_MAGIC$Runs <- rownames(df_MAGIC)
rownames(df_MAGIC) <- NULL
df <- merge(df_MAGIC, df_anno, by = "Runs")
ARI_MAGIC <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_MAGIC <- c(ARI_MAGIC, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_MAGIC <- as.data.frame(ARI_MAGIC)
df_BNMF <- read.table("BNMF.txt", header = TRUE, check.names = FALSE)
df_BNMF$Runs <- rownames(df_BNMF)
rownames(df_BNMF) <- NULL
df <- merge(df_BNMF, df_anno, by = "Runs")
ARI_BNMF <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_BNMF <- c(ARI_BNMF, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_BNMF <- as.data.frame(ARI_BNMF)
colnames(ARI_tagcount) <- c("ARI")
colnames(ARI_scImpute) <- c("ARI")
colnames(ARI_SAVER) <- c("ARI")
colnames(ARI_MAGIC) <- c("ARI")
colnames(ARI_BNMF) <- c("ARI")
colnames(ARI_cisTopic) <- c("ARI")
ARI_tagcount$Method <- rep("TC", 1)
ARI_scImpute$Method <- rep("scImpute", 1)
ARI_SAVER$Method <- rep("SAVER", 1)
ARI_MAGIC$Method <- rep("MAGIC", 1)
ARI_BNMF$Method <- rep("atacImpute", 1)
ARI_cisTopic$Method <- rep("cisTopic", 1)
df <- rbind(ARI_tagcount, ARI_scImpute, ARI_SAVER, ARI_MAGIC, ARI_BNMF, ARI_cisTopic)
write.table(df, "ARI.txt", quote = FALSE, sep = "\t", row.names = FALSE)
meth_cols <- c(
"TC" = "#e41a1c",
"scImpute" = "#4daf4a",
"MAGIC" = "#984ea3",
"SAVER" = "#ffff33",
"atacImpute" = "#ff7f00",
"cisTopic" = "#f781bf"
)
d1 <- df %>%
group_by(Method) %>%
dplyr::summarise(Median = median(ARI))
p <- ggplot(df, aes( x = reorder(Method, -ARI, FUN = median), y = ARI, fill = Method )) +
geom_bar(data = d1, aes(x = reorder(Method, -Median, FUN = median), y = Median), position = "dodge", stat = "identity"
) +
geom_point(position = position_jitterdodge(jitter.width = 0.45, dodge.width = 0.9),
size = 0.4) +
scale_fill_manual(values = meth_cols) +
scale_colour_manual(values = meth_cols) +
labs(x = "", y = "Adjusted Rand Index") +
theme_classic(base_size = 12) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.line = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.title = element_blank()
) +
annotate(
"segment",
x = -Inf,
xend = Inf,
y = -Inf,
yend = -Inf,
color = "black"
) +
annotate(
"segment",
x = -Inf,
xend = -Inf,
y = -Inf,
yend = Inf,
color = "black"
)
pdf("ARI.pdf", width = 6, height = 4)
print(p)
dev.off()
library(optparse)
library(cisTopic)
library(methods)
library(stringr)
cisTopicObject <- readRDS('cisTopicObject_melanoma.Rds')
data(counts_mel)
cisTopicObject <- createcisTopicObject(counts_mel, project.name='scH3K27Ac_melanoma')
cisTopicObject <- runModels(cisTopicObject, topic=c(2, 5:15, 20, 25), seed=987, nCores=13, burnin = 120, iterations = 150, addModels=FALSE)
t1 <- as.data.frame(cisTopicObject@selected.model$document_expects)
t2 <- as.data.frame(t(cisTopicObject@selected.model$topics))
cisTopicObject <- selectModel(cisTopicObject)
t1 <- as.data.frame(cisTopicObject@selected.model$document_expects)
t2 <- as.data.frame(t(cisTopicObject@selected.model$topics))
t1 <- t1 / rowSums(t1)
t2 <- t2 / colSums(t2)
head(t2)
t2 <- as.data.frame(t(cisTopicObject@selected.model$topics))
head(t2)
?createcisTopicObject
?runModels
