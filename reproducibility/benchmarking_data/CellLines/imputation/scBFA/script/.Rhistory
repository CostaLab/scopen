"segment",
x = -Inf,
xend = Inf,
y = -Inf,
yend = -Inf,
color = "black"
) +
annotate(
"segment",
x = -Inf,
xend = -Inf,
y = -Inf,
yend = Inf,
color = "black"
)
pdf("ARI.pdf", width = 6, height = 4)
print(p)
dev.off()
library(ggplot2)
library(ggsci)
library(cowplot)
library(gridExtra)
library(dplyr)
library(mclust)
df_tagcount <- read.table("TagCount.txt", header = TRUE, check.names = FALSE)
df_anno <- read.table("../../Statistics/stat.txt", header = TRUE)
df_anno$NumofReads <- NULL
df_anno <- subset(df_anno, Runs %in% rownames(df_tagcount))
df_tagcount$Runs <- rownames(df_tagcount)
rownames(df_tagcount) <- NULL
df <- merge(df_tagcount, df_anno, by = "Runs")
ARI_tagcount <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_tagcount <- c(ARI_tagcount, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_tagcount <- as.data.frame(ARI_tagcount)
#######################
df_scImpute <- read.table("scImpute.txt", header = TRUE, check.names = FALSE)
df_scImpute$Runs <- rownames(df_scImpute)
rownames(df_scImpute) <- NULL
df <- merge(df_scImpute, df_anno, by = "Runs")
ARI_scImpute <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_scImpute <- c(ARI_scImpute, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_scImpute <- as.data.frame(ARI_scImpute)
df_SAVER <- read.table("SAVER.txt", header = TRUE, check.names = FALSE)
df_SAVER$Runs <- rownames(df_SAVER)
rownames(df_SAVER) <- NULL
df <- merge(df_SAVER, df_anno, by = "Runs")
ARI_SAVER <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_SAVER <- c(ARI_SAVER, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_SAVER <- as.data.frame(ARI_SAVER)
df_MAGIC <- read.table("MAGIC.txt", header = TRUE, check.names = FALSE)
df_MAGIC$Runs <- rownames(df_MAGIC)
rownames(df_MAGIC) <- NULL
df <- merge(df_MAGIC, df_anno, by = "Runs")
ARI_MAGIC <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_MAGIC <- c(ARI_MAGIC, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_MAGIC <- as.data.frame(ARI_MAGIC)
df_DrImpute <- read.table("DrImpute.txt", header = TRUE, check.names = FALSE)
df_DrImpute$Runs <- rownames(df_DrImpute)
rownames(df_DrImpute) <- NULL
df <- merge(df_DrImpute, df_anno, by = "Runs")
ARI_DrImpute <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_DrImpute <- c(ARI_DrImpute, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_DrImpute <- as.data.frame(ARI_DrImpute)
df_BNMF <- read.table("BNMF.txt", header = TRUE, check.names = FALSE)
df_BNMF$Runs <- rownames(df_BNMF)
rownames(df_BNMF) <- NULL
df <- merge(df_BNMF, df_anno, by = "Runs")
ARI_BNMF <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_BNMF <- c(ARI_BNMF, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_BNMF <- as.data.frame(ARI_BNMF)
colnames(ARI_tagcount) <- c("ARI")
colnames(ARI_scImpute) <- c("ARI")
colnames(ARI_SAVER) <- c("ARI")
colnames(ARI_DrImpute) <- c("ARI")
colnames(ARI_MAGIC) <- c("ARI")
colnames(ARI_BNMF) <- c("ARI")
ARI_tagcount$Method <- rep("TC", 1)
ARI_scImpute$Method <- rep("scImpute", 1)
ARI_SAVER$Method <- rep("SAVER", 1)
ARI_DrImpute$Method <- rep("DrImpute", 1)
ARI_MAGIC$Method <- rep("MAGIC", 1)
ARI_BNMF$Method <- rep("atacImpute", 1)
df <- rbind(ARI_tagcount, ARI_scImpute, ARI_SAVER,
ARI_DrImpute, ARI_MAGIC, ARI_BNMF)
write.table(df, "ARI.txt", quote = FALSE, sep = "\t", row.names = FALSE)
meth_cols <- c(
"TC" = "#e41a1c",
"DrImpute" = "#377eb8",
"scImpute" = "#4daf4a",
"MAGIC" = "#984ea3",
"SAVER" = "#ffff33",
"atacImpute" = "#ff7f00"
)
d1 <- df %>%
group_by(Method) %>%
dplyr::summarise(Median = median(ARI))
p <- ggplot(df, aes( x = reorder(Method, -ARI, FUN = median), y = ARI, fill = Method )) +
geom_bar() +
scale_color_npg() +
scale_fill_npg() +
labs(x = "", y = "Adjusted Rand Index") +
theme_classic(base_size = 12) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.line = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.title = element_blank()
) +
annotate(
"segment",
x = -Inf,
xend = Inf,
y = -Inf,
yend = -Inf,
color = "black"
) +
annotate(
"segment",
x = -Inf,
xend = -Inf,
y = -Inf,
yend = Inf,
color = "black"
)
pdf("ARI.pdf", width = 6, height = 4)
print(p)
dev.off()
library(ggplot2)
library(ggsci)
library(cowplot)
library(gridExtra)
library(dplyr)
library(mclust)
df_tagcount <- read.table("TagCount.txt", header = TRUE, check.names = FALSE)
df_anno <- read.table("../../Statistics/stat.txt", header = TRUE)
df_anno$NumofReads <- NULL
df_anno <- subset(df_anno, Runs %in% rownames(df_tagcount))
df_tagcount$Runs <- rownames(df_tagcount)
rownames(df_tagcount) <- NULL
df <- merge(df_tagcount, df_anno, by = "Runs")
ARI_tagcount <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_tagcount <- c(ARI_tagcount, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_tagcount <- as.data.frame(ARI_tagcount)
#######################
df_scImpute <- read.table("scImpute.txt", header = TRUE, check.names = FALSE)
df_scImpute$Runs <- rownames(df_scImpute)
rownames(df_scImpute) <- NULL
df <- merge(df_scImpute, df_anno, by = "Runs")
ARI_scImpute <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_scImpute <- c(ARI_scImpute, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_scImpute <- as.data.frame(ARI_scImpute)
df_SAVER <- read.table("SAVER.txt", header = TRUE, check.names = FALSE)
df_SAVER$Runs <- rownames(df_SAVER)
rownames(df_SAVER) <- NULL
df <- merge(df_SAVER, df_anno, by = "Runs")
ARI_SAVER <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_SAVER <- c(ARI_SAVER, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_SAVER <- as.data.frame(ARI_SAVER)
df_MAGIC <- read.table("MAGIC.txt", header = TRUE, check.names = FALSE)
df_MAGIC$Runs <- rownames(df_MAGIC)
rownames(df_MAGIC) <- NULL
df <- merge(df_MAGIC, df_anno, by = "Runs")
ARI_MAGIC <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_MAGIC <- c(ARI_MAGIC, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_MAGIC <- as.data.frame(ARI_MAGIC)
df_DrImpute <- read.table("DrImpute.txt", header = TRUE, check.names = FALSE)
df_DrImpute$Runs <- rownames(df_DrImpute)
rownames(df_DrImpute) <- NULL
df <- merge(df_DrImpute, df_anno, by = "Runs")
ARI_DrImpute <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_DrImpute <- c(ARI_DrImpute, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_DrImpute <- as.data.frame(ARI_DrImpute)
df_BNMF <- read.table("BNMF.txt", header = TRUE, check.names = FALSE)
df_BNMF$Runs <- rownames(df_BNMF)
rownames(df_BNMF) <- NULL
df <- merge(df_BNMF, df_anno, by = "Runs")
ARI_BNMF <- double()
for (i in 1:1){
estimate_cluster <- df[, i+1]
ARI_BNMF <- c(ARI_BNMF, adjustedRandIndex(estimate_cluster, df$CellType))
}
ARI_BNMF <- as.data.frame(ARI_BNMF)
colnames(ARI_tagcount) <- c("ARI")
colnames(ARI_scImpute) <- c("ARI")
colnames(ARI_SAVER) <- c("ARI")
colnames(ARI_DrImpute) <- c("ARI")
colnames(ARI_MAGIC) <- c("ARI")
colnames(ARI_BNMF) <- c("ARI")
ARI_tagcount$Method <- rep("TC", 1)
ARI_scImpute$Method <- rep("scImpute", 1)
ARI_SAVER$Method <- rep("SAVER", 1)
ARI_DrImpute$Method <- rep("DrImpute", 1)
ARI_MAGIC$Method <- rep("MAGIC", 1)
ARI_BNMF$Method <- rep("atacImpute", 1)
df <- rbind(ARI_tagcount, ARI_scImpute, ARI_SAVER,
ARI_DrImpute, ARI_MAGIC, ARI_BNMF)
write.table(df, "ARI.txt", quote = FALSE, sep = "\t", row.names = FALSE)
meth_cols <- c(
"TC" = "#e41a1c",
"DrImpute" = "#377eb8",
"scImpute" = "#4daf4a",
"MAGIC" = "#984ea3",
"SAVER" = "#ffff33",
"atacImpute" = "#ff7f00"
)
d1 <- df %>%
group_by(Method) %>%
dplyr::summarise(Median = median(ARI))
p <- ggplot(df, aes( x = reorder(Method, -ARI, FUN = median), y = ARI, fill = Method )) +
geom_bar(data = d1, aes(x = reorder(Method, -Median, FUN = median), y = Median), position = "dodge", stat = "identity") +
scale_color_npg() +
scale_fill_npg() +
labs(x = "", y = "Adjusted Rand Index") +
theme_classic(base_size = 12) +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.line = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.title = element_blank()
) +
annotate(
"segment",
x = -Inf,
xend = Inf,
y = -Inf,
yend = -Inf,
color = "black"
) +
annotate(
"segment",
x = -Inf,
xend = -Inf,
y = -Inf,
yend = Inf,
color = "black"
)
pdf("ARI.pdf", width = 6, height = 4)
print(p)
dev.off()
library(ggplot2)
library(ggsci)
library(cowplot)
library(gridExtra)
library(dplyr)
library(mclust)
df_tagcount <- read.table("TagCount.txt", header = TRUE, check.names = FALSE)
df_anno <- read.table("../../Statistics/stat.txt", header = TRUE)
df_anno$NumofReads <- NULL
df_anno <- subset(df_anno, Runs %in% rownames(df_tagcount))
df_tagcount$Runs <- rownames(df_tagcount)
rownames(df_tagcount) <- NULL
df <- merge(df_tagcount, df_anno, by = "Runs")
ARI_tagcount <- as.data.frame(adjustedRandIndex(df$pa, df$CellType))
df_scImpute <- read.table("scImpute.txt", header = TRUE, check.names = FALSE)
df_scImpute$Runs <- rownames(df_scImpute)
rownames(df_scImpute) <- NULL
df <- merge(df_scImpute, df_anno, by = "Runs")
ARI_scImpute <- as.data.frame(as.data.frame(adjustedRandIndex(df$pa, df$CellType)))
df_SAVER <- read.table("SAVER.txt", header = TRUE, check.names = FALSE)
df_SAVER$Runs <- rownames(df_SAVER)
rownames(df_SAVER) <- NULL
df <- merge(df_SAVER, df_anno, by = "Runs")
ARI_SAVER <- as.data.frame(as.data.frame(adjustedRandIndex(df$pa, df$CellType)))
df_MAGIC <- read.table("MAGIC.txt", header = TRUE, check.names = FALSE)
df_MAGIC$Runs <- rownames(df_MAGIC)
rownames(df_MAGIC) <- NULL
df <- merge(df_MAGIC, df_anno, by = "Runs")
ARI_MAGIC <- as.data.frame(as.data.frame(adjustedRandIndex(df$pa, df$CellType)))
df_BNMF <- read.table("BNMF.txt", header = TRUE, check.names = FALSE)
df_BNMF$Runs <- rownames(df_BNMF)
rownames(df_BNMF) <- NULL
df <- merge(df_BNMF, df_anno, by = "Runs")
ARI_BNMF <- as.data.frame(as.data.frame(adjustedRandIndex(df$pa, df$CellType)))
df_cisTopic <- read.table("cisTopic.txt", header = TRUE, check.names = FALSE)
df_cisTopic$Runs <- rownames(df_cisTopic)
rownames(df_cisTopic) <- NULL
df <- merge(df_cisTopic, df_anno, by = "Runs")
ARI_cisTopic <- as.data.frame(as.data.frame(adjustedRandIndex(df$pa, df$CellType)))
df_DCA <- read.table("DCA.txt", header = TRUE, check.names = FALSE)
df_DCA$Runs <- rownames(df_DCA)
rownames(df_DCA) <- NULL
df <- merge(df_DCA, df_anno, by = "Runs")
ARI_DCA <- as.data.frame(as.data.frame(adjustedRandIndex(df$pa, df$CellType)))
colnames(ARI_tagcount) <- c("ARI")
colnames(ARI_scImpute) <- c("ARI")
colnames(ARI_SAVER) <- c("ARI")
colnames(ARI_MAGIC) <- c("ARI")
colnames(ARI_BNMF) <- c("ARI")
colnames(ARI_cisTopic) <- c("ARI")
colnames(ARI_DCA) <- c("ARI")
ARI_tagcount$Method <- rep("TC", 1)
ARI_scImpute$Method <- rep("scImpute", 1)
ARI_SAVER$Method <- rep("SAVER", 1)
ARI_MAGIC$Method <- rep("MAGIC", 1)
ARI_BNMF$Method <- rep("atacImpute", 1)
ARI_cisTopic$Method <- rep("cisTopic", 1)
ARI_DCA$Method <- rep("DCA", 1)
df <- rbind(ARI_tagcount, ARI_scImpute, ARI_SAVER, ARI_MAGIC, ARI_BNMF, ARI_cisTopic, ARI_DCA)
write.table(df, "ARI.txt", quote = FALSE, sep = "\t", row.names = FALSE)
meth_cols <- c(
"TC" = "#e41a1c",
"scImpute" = "#377eb8",
"MAGIC" = "#4daf4a",
"SAVER" = "#984ea3",
"atacImpute" = "#ff7f00",
"cisTopic" = "#f781bf",
"DCA" = "#a65628"
)
d1 <- df %>%
group_by(Method) %>%
dplyr::summarise(Median = median(ARI))
p <- ggplot(df, aes( x = reorder(Method, -ARI, FUN = median), y = ARI, fill = Method )) +
geom_bar(data = d1, aes(x = reorder(Method, -Median, FUN = median), y = Median), position = "dodge", stat = "identity"
) +
ylim(0, 1) +
scale_fill_manual(values = meth_cols) +
scale_color_manual(values = meth_cols) +
labs(x = "", y = "Adjusted Rand Index") +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.line = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.title = element_blank()
) +
annotate(
"segment",
x = -Inf,
xend = Inf,
y = -Inf,
yend = -Inf,
color = "black"
) +
annotate(
"segment",
x = -Inf,
xend = -Inf,
y = -Inf,
yend = Inf,
color = "black"
)
pdf("ARI.pdf", width = 6, height = 4)
print(p)
dev.off()
p <- ggplot(df, aes( x = reorder(Method, -ARI, FUN = median), y = ARI, fill = Method )) +
geom_bar(data = d1, aes(x = reorder(Method, -Median, FUN = median), y = Median), position = "dodge", stat = "identity"
) +
scale_fill_manual(values = meth_cols) +
scale_color_manual(values = meth_cols) +
labs(x = "", y = "Adjusted Rand Index") +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.line = element_blank(),
legend.key.size = unit(0.5, "cm"),
legend.title = element_blank()
) +
annotate(
"segment",
x = -Inf,
xend = Inf,
y = -Inf,
yend = -Inf,
color = "black"
) +
annotate(
"segment",
x = -Inf,
xend = -Inf,
y = -Inf,
yend = Inf,
color = "black"
)
pdf("ARI.pdf", width = 6, height = 4)
print(p)
dev.off()
setwd("/run/user/1001/gvfs/sftp:host=login18-1.hpc.itc.rwth-aachen.de,user=rs619065/rwthfs/rz/cluster/hpcwork/izkf/projects/SingleCellOpenChromatin/local/ATAC/Nature2015/Imputation/scBFA/script")
input_file <- "../../../TagCount/TagCount.txt"
x <- read.table(input_file, header = TRUE)
dim(x)
BiocManager::install("scBFA")
BiocManager::install("scBFA")
BiocManager::install("scBFA")
BiocManager::install(version='devel')
library(devtools)
install_github("quon-titative-biology/scBFA")
library(optparse)
library(scBFA)
library(methods)
library(stringr)
?
scBFA
bfa_model = scBFA(scData = x, numFactors = 30)
bfa_model = scBFA(scData = as.matrix(x), numFactors = 30)
bfa_model = scBFA(scData = as.matrix(x), numFactors = 10)
bfa_model = scBFA(scData = as.matrix(x), numFactors = 3)
data("exprdata")
data("celltype")
exprdata
sce <- SingleCellExperiment(assay = list(counts = exprdata))
bfa_model = scBFA(scData = as.matrix(exprdata), numFactors = 3)
bfa_model$ZZ
dim(exprdata)
bfa_model = scBFA(scData = as.matrix(x), numFactors = 10)
bfa_model = scBFA(scData = as.matrix(exprdata), numFactors = 10)
bfa_model$ZZ
dim(bfa_model$ZZ)
zz <- as.matrix(bfa_model$ZZ)
aa <- as.matrix(bfa_model$AA)
x_complete <- zz %*% aa
x_complete <- zz %*% T(aa)
x_complete <- aa %*% t(zz)
x <- exprdata
bfa_model = scBFA(scData = as.matrix(x), numFactors = 10)
zz <- as.matrix(bfa_model$ZZ)
aa <- as.matrix(bfa_model$AA)
x_complete <- aa %*% t(zz)
colnames(x_complete) <- colnames(x)
rownames(x_complete) <- rownames(x)
dim(x_complete)
dim(x)
head(x_complete)
head(x)
library(zinbwave)
library(SingleCellExperiment)
library(ggplot2)
library(scBFA)
# raw counts matrix with rows are genes and columns are cells
data("exprdata")
# a vector specify the ground truth of cell types provided by conquer database
data("celltype")
sce <- SingleCellExperiment(assay = list(counts = exprdata))
bfa_model = scBFA(scData = sce, numFactors = 2)
set.seed(5)
df = as.data.frame(bfa_model$ZZ)
df$celltype = celltype
p1 <- ggplot(df,aes(x = V1,y = V2,colour = celltype))
p1 <- p1 + geom_jitter(size=2.5,alpha = 0.8)
colorvalue <- c("#43d5f9","#24b71f","#E41A1C", "#ffc935","#3d014c","#39ddb2",
"slateblue2","maroon","#f7df27","palevioletred1","olivedrab3",
"#377EB8","#5043c1","blue","aquamarine2","chartreuse4",
"burlywood2","indianred1","mediumorchid1")
p1 <- p1 + xlab("tsne axis 1") + ylab("tsne axis 2")
p1 <- p1 + scale_color_manual(values = colorvalue)
p1 <- p1 + theme(panel.background = element_blank(),
legend.position = "right",
axis.text=element_blank(),
axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"),
plot.title = element_blank()
)
p1
bpca = BinaryPCA(scData = sce)
df = as.data.frame(bpca$x[,c(1:2)])
colnames(df) = c("V1","V2")
df$celltype = celltype
p1 <- ggplot(df,aes(x = V1,y = V2,colour = celltype))
p1 <- p1 + geom_jitter(size=2.5,alpha = 0.8)
colorvalue <- c("#43d5f9","#24b71f","#E41A1C", "#ffc935","#3d014c","#39ddb2",
"slateblue2","maroon","#f7df27","palevioletred1","olivedrab3",
"#377EB8","#5043c1","blue","aquamarine2","chartreuse4",
"burlywood2","indianred1","mediumorchid1")
p1 <- p1 + xlab("tsne axis 1") + ylab("tsne axis 2")
p1 <- p1 + scale_color_manual(values = colorvalue)
p1 <- p1 + theme(panel.background = element_blank(),
legend.position = "right",
axis.text=element_blank(),
axis.line.x = element_line(color="black"),
axis.line.y = element_line(color="black"),
plot.title = element_blank()
)
p1
sessionInfo()
